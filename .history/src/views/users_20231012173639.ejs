<!-- <html>  
  
<head>  
    <title>Using Jquery Datatable</title>  
  
    <head>  
       
        <link rel="stylesheet" href="https://cdn.datatables.net/1.10.9/css/jquery.dataTables.min.css" />  
        
      
    </head>  
  
    <body>    
        <table id="datatable">  
            <button type="button" onclick="tableToCSV()">
               Export
            </button>
            <thead>  
                <tr>  
                    <th> Id </th>  
                    <th> Name </th>  
                    <th> Email </th>  
                    <th> contactNumber</th>  
                </tr>  
            </thead>  
            <tbody>
                <% if(data.length > 0){ %>
         
                   <% for ( var i = 0 ; i < data.length ; i++){ %>
                   <tr>
                      <td>
                          <%= data[i].id%>
                       </td>
                      <td>
                         <%= data[i].name%>
                      </td>
                      <td>
                         <%= data[i].email%>
                      </td>
                      <td>
                          <%= data[i].contactNumber%>
                       </td>
                   </tr>
                   <% } %>
         
                <% } %>
              </tbody>  
        </table>  

        <script src="https://code.jquery.com/jquery-1.11.3.min.js" type="text/javascript"></script>  
        <script src="https://cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js" type="text/javascript"></script>  
        <script type="text/javascript">  
            $(document).ready(function ()  
            {  
                $('#datatable').dataTable(  
                {
                    select: true,
                    dom: 'Bfrtip',
                    buttons: [
                    {
                        extend: 'excel',
                        text: 'Export excel',
                        className: 'exportExcel',
                        filename: 'Export excel',
                        exportOptions: {
                            modifier: {
                            page: 'all'
                            }
                        }
                    }
                    ]
                });  
            });  
                    </script> 
    </body>  
  
</html>   -->

<!DOCTYPE html>
<html>
  <body>
    <center>
      <h2>Table to CSV converter</h2>
      <table border="1" cellspacing="0" cellpadding="10" id="tableID">
        <tr>
          <th>Id</th>
          <th>Name</th>
          <th>Email</th>
          <th>contactNumber</th>
        </tr>
        <% if (data.length > 0) { %> <% for (var i = 0; i < data.length; i++) {
        %>
        <tr>
          <td><%= data[i].id %></td>
          <td><%= data[i].name %></td>
          <td><%= data[i].email %></td>
          <td><%= data[i].contactNumber %></td>
        </tr>
        <% } %> <% } %>
      </table>
      <br /><br />
      <button type="button" onclick="tableToCSV()">Export</button>
      <br /><br />
      <input type="file" name="csv" />
      <button type="button" onclick="showTable()" id="reload_page">
        Import
      </button>
      <br><br>
      <table border="1" cellspacing="0" cellpadding="10" id="importId" style="display: none; width: 47%;">
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Email</th>
            <th>contactNumber</th>
            <!-- <th>Action</th> -->
        </tr>
       
      </table>

      
      <form id="add_form" action="javascript:void(0);" method="POST" enctype="multipart/form-data" novalidate>
        <div class="">
           <!-- <div class="form-group">
                 <label for="gender">Select Seller <span style="color: red;">*</span></label>
                 <select
                 id="seller"
                 name="seller_id"
                 class="selectpicker form-control filter_by_dropdown select_dropdown" data-toggle="select2" 
                 data-form-field-type="dropdown"
                 data-filter-by="true"
                 data-live-search="true"
                 data-parsley-required-message="Please select seller."
                 data-parsley-errors-container="#seller-error-msg"
                 onchange="checkSellerAddress(this)"
                 data-route="{{env('BASE_URL')}}"
                 data-is_selectpicker="true"
                 required
                 >
                    <option value="" selected disabled hidden> Select Seller</option>
                    @each((sellerdata,index) in sellers)
                          @set('firstname','')
                          @set('lastname','')
                       @if(sellerdata.first_name != null && sellerdata.first_name != '')
                          @set('firstname',sellerdata.first_name)
                       @endif
                       @if(sellerdata.last_name != null && sellerdata.last_name != '')
                          @set('lastname',sellerdata.last_name)
                       @endif   
                       @set('username', firstname +' '+ lastname)
                       @if(sellerdata.user_name != null && sellerdata.user_name != '')
                          @set('username',sellerdata.user_name)
                       @endif
                       <option value="{{sellerdata.id}}">{{username}}</option>
                    @endeach
                 </select>
              <div id="seller-error-msg"></div>
           </div>
        </div> -->
       
    </center>


    <script type="text/javascript">
       

      function tableToCSV() {
        // Get the table element
        const table = document.querySelector("table");

        // Create a new CSV string
        const csvString = [];

        // Define the order of columns
        const columnOrder = ["Id", "Name", "Email", "Contact Number"];

        // Add header row
        csvString.push(columnOrder.join(","));

        // Iterate over the table rows starting from the second row
        for (let i = 1; i < table.rows.length; i++) {
          const row = table.rows[i];

          // Create a new CSV row
          const csvRow = [];

          // Iterate over the table cells in the row
          for (let j = 0; j < columnOrder.length; j++) {
            const columnName = columnOrder[j];
            const cell = row.cells[j];

            // Get the cell text and remove potential leading/trailing white spaces
            const cellText = cell ? cell.textContent.trim() : "";

            // Add the cell text to the CSV row
            csvRow.push(`"${cellText}"`);
          }

          // Join the CSV row values with a comma
          csvString.push(csvRow.join(","));
        }

        // Download the CSV file
        downloadCSVFile(csvString);
      }
      function downloadCSVFile(csvString) {
        // Create a Blob object with the CSV data
        const blob = new Blob([csvString.join("\r\n")], { type: "text/csv" });

        // Create a temporary link element to trigger the download process
        const tempLink = document.createElement("a");

        // Set the `href` attribute of the link element to the Blob object
        tempLink.href = window.URL.createObjectURL(blob);

        // Set the `download` attribute of the link element to the filename of the CSV file
        tempLink.download = "export.sheet";

        // Set the `Content-Disposition` header of the link element
        tempLink.setAttribute(
          "Content-Disposition",
          "attachment; filename=export.sheet"
        );

        // Append the link element to the document body
        document.body.appendChild(tempLink);

        // Click the link element to trigger the download process
        tempLink.click();

        // Remove the link element from the document body
        document.body.removeChild(tempLink);
      }

      $('#import_btn').on('click', function() {
       const formJ = $("#add_form");
       var parsleyInstance = $('#add_form').parsley().validate();
        if(parsleyInstance === false) {
            return false;
        }
		   const formData = new FormData(formJ[0]);
       
        var url  = `http://localhost:5000/user/upload`;
        $.ajax({
        type: 'POST',
        url: `${url}`,
        dataType: 'json',
        data: formData,
        contentType: false,
        cache: false,
        processData: false,
        
         success:function(response){
            console.log(response);
            if(response.data && response.data.length > 0) {
              var tbl = '';
              //$("#table-data").show();
              $('#add_form')[0].reset();
              $('#add_form').parsley().reset();
                window.location.reload();
            }
         }
      });
    })


    function showTable() {
      // Get the CSV file element
      const csvFile = document.querySelector('input[name="csv"]');
      // Check if the user has selected a CSV file
      if (csvFile.files.length === 0) {
        return;
      }

      // Read the CSV file
      const reader = new FileReader();
      reader.onload = function (event) {
        // Get the CSV data as a string
        const csvData = event.target.result;

        // Parse the CSV data into an array of objects
        const rows = csvData.split("\n").filter((row) => row.length > 0).map((row) => row.split(","));
        console.log(rows)

        const table = document.getElementById("importId");
        table.style.display = "block";

        // Clear existing rows
        // while (table.rows.length > 1) {
        //   table.deleteRow(1);
        // }

        // Populate the table with new data
        for (const row of rows.slice(1)) {
          const dataRow = table.insertRow(-1);
          for (const cell of row) {
            const dataCell = dataRow.insertCell(-1);
            dataCell.textContent = cell;
        
          }
        }
      };

      reader.readAsText(csvFile.files[0]);
    }
    </script>
  </body>
</html>

